## Git ##

# checkout files
alias gitco="git checkout"

# commit files on stage
alias gc="git commit -m "

# display long status
alias gitst="git status"

# display short status
alias gst="git status --short"

# grep through repo
alias ggrep="git grep --break --heading --line-number"

# grep through previous commits (and deleted code)
alias gsearch="git log -S"

# make a commit without adding anything (for Heroku push)
alias gfc="git commit --allow-empty -m 'forced commit'"

# show git files about to be commited
alias gshow="git show --pretty='format:' --name-only"

# display local branches
alias gbl="git branch"

# display remote branches
alias gbr="git branch -r"

# display local and remote branches
alias gba="git branch -a"

# delete local branch
alias gbld="git branch -D"

# delete remote branch
alias gbrd="git push origin --delete"

# pull from a remote
alias gp="git pull"

# pull from a remote and avoid the merge commit
alias gpre="git pull --rebase"

# push to master branch on github
alias gpom="git push origin master"

# push to currently checked out branch on github
alias gpoh="git push origin HEAD"

# push to Heroku
alias gphm="git push heroku master"

# push to Dokku
alias gpdm="git push dokku master"

# undo a push
alias gunpush="git push -f origin HEAD^:master"

# undo a merge
alias gunmerge="git reset --merge ORIG_HEAD"

# add all unstaged files to index
alias gall="git add ."

# see dry run of 'git add .'
alias galldry="git add -n ."

# remove all files from stage
alias gallr="git reset HEAD ."

# undo a 'git add .'
# alias gunall="git rm -r --cached ."

# redo last commit statement
alias grs="git reset --soft HEAD^"

# redo last commit AND undo staged files
alias grm="git reset --mixed HEAD^"

#
alias grh="git reset --hard HEAD^"

# open all files with merge conflicts in Sublime Text
# why doesn't this work?
alias gconf="git diff --name-only --diff-filter=U | uniq | xargs subl -n"

# stash unstaged files
alias gstash="git stash"

# recover last stash
alias gstashp="git stash pop"

# display stashes
alias gstashl="git stash list"

# display diff
alias gdiff="git diff --color --color-words --abbrev"

# show difference without whitespace changes
alias gdw="git diff --ignore-space-change"

# display differences by filename
alias gdfiles="git diff --stat"

# shows difference between empty tree and current working tree
alias gtreediff="git diff --stat `git hash-object -t tree /dev/null`"

# nice log output
alias glog="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"

# log output with cmd-clickable github urls
alias glogc="gf"

# user commits in repo for last week
alias gtime="git log --author='`git config --global user.name`' --since='1 sunday ago' --until='now' --format='%Cred%h%Creset %s %Cgreen(%ci) %Cblue<%an>%Creset' --no-merges"

# user commits in repo for previous week
alias gtime2="git log --author='`git config --global user.name`' --since='2 sunday ago' --until='1 sunday ago' --format='%Cred%h%Creset %s %Cgreen(%ci) %Cblue<%an>%Creset' --no-merges"

# display global git user email
alias gemail="git config --global --get user.email"

# create an orphan branch for gh-pages and unstage all files
# follow with git rm --cached $(git-files)
alias ghpages="git checkout --orphan gh-pages"

## Git repo trivia ##

# display contribution calendar of repo
alias gcal="git-cal"

# list number of commits in repo per user
alias gscore="git shortlog -n -s -e"

# info about own contributions
alias gme="gitContribute 1"

# info about own contributions over previous day
alias gme24="gitContribute 2"

# info about team contributions
alias gteam="gitContribute 3"

# info about team contributions over previous day
alias gteam24="gitContribute 4"

# get number of files in repo
alias gfiles="git ls-files | wc -l"

# get lines of code in repo
alias loc="git ls-files | xargs wc -l"

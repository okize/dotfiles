%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true
scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    - include: Packages/Naomi/syntaxes/fjsx15/core.sublime-syntax#import-properties
    # Dynamic import.
    - match: import\b(?=\s*\()
      scope: support.function.import.js.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Import the entire module.
    - match: (?x)import\b(?=\s*(?>"|'|`))
      scope: keyword.control.import-export.import.js.fjsx15
      set: origin-path
    # Other.
    - match: (?x)import\b
      scope: keyword.control.import-export.import.js.fjsx15
      set: [
        delimiter,
        optional-target
      ]

  alias:
    - match: as\b
      scope: keyword.control.import-export.as.js.fjsx15
      set: alias-name

  alias-name:
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.readwrite.js.fjsx15
      pop: true

  arguments:
    - include: Packages/Naomi/syntaxes/fjsx15/expression.sublime-syntax

  block-optional-target:
    - include: comment-no-pop
    - match: (?=(?>[,}]))
      pop: true
    - include: shared-optional-target

  close-block:
    - match: \}
      scope: punctuation.section.block.end.js.fjsx15
      pop: true

  comment-no-pop:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  delimiter:
    - include: comment-no-pop
    - match: \,
      scope: punctuation.separator.comma.js.fjsx15
      push: optional-target
    # From.
    - include: origin
    - include: else-pop

  else-pop:
    - match: (?=\S)
      pop: true

  function-call-meta-scope:
    - meta_scope: meta.function-call.js.fjsx15
    - match: ""
      pop: true

  origin:
    - include: comment-no-pop
    - match: from\b
      scope: keyword.control.import-export.origin.js.fjsx15
      set: origin-path

  origin-path:
    - include: comment-no-pop
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax

  optional-target:
    - include: comment-no-pop
    - match: (?=(?>[,}]|from))
      pop: true
    - include: shared-optional-target

  shared-optional-target:
    # Type.
    - include: Packages/Naomi/syntaxes/flow1/type-import.sublime-syntax
    # Aliased All.
    - match: \*(?=\s*as)
      scope: keyword.control.import-export.star.js.fjsx15
      set: alias
    # All.
    - match: \*
      scope: keyword.control.import-export.star.js.fjsx15
      pop: true
    # Multiple targets.
    - match: \{
      scope: punctuation.section.block.begin.js.fjsx15
      set: [
        close-block,
        delimiter,
        block-optional-target
      ]
    # Aliased.
    - match: (?xi){{commonIdentifier}}(?=\s+as)
      scope: variable.other.readwrite.js.fjsx15
      set: alias
    # Simple.
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.readwrite.js.fjsx15
      pop: true

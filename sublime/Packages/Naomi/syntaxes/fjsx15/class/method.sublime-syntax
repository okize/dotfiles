%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true
scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

  indexer: |
    (\[
      (?> {{string}}
        | \g<-1>
        | [^\[\]]
      )*
    \])

  methodIdentifier: |
    (?> {{string}}
      | {{indexer}}
      | {{commonIdentifier}}
    )

  genericParameters: |
    (<
      (?> {{string}}
        | \g<-1>
        | [^<>]
      )*
    >)

  string: |
    (?> '(?:\'|[^'])*?'
      | "(?:\"|[^"])*?"
      | `(?:\`|[^`])*?`
    )

contexts:
  main:
    # Method without identifier.
    - match: (?=\()
      set: declaration
    # Normal method.
    - match: |
        (?xi)
        (?=
          {{methodIdentifier}}
          \s*{{genericParameters}}?
          \s*\(
        )
      set: declaration

  body:
    - include: Packages/Naomi/syntaxes/fjsx15/function/body.sublime-syntax

  comment-no-pop:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  computed-identifier-end:
    - match: \]
      scope: punctuation.definition.function.identifier.end.js.fjsx15
      pop: true

  declaration:
    - meta_scope: >-
        meta.declaration.function.method.js.fjsx15
        meta.function.js.fjsx15
    - include: comment-no-pop
    # Body.
    - match: (?=\{)
      set: body
    # Generic parameters.
    - match: (?=<)
      push: generic-arguments
    # Parameters.
    - match: (?=\()
      push: parameters
    # Support identifier.
    - match: constructor\b
      scope: entity.name.function.constructor.js.fjsx15
      set: [
        optional-support-body,
        support-parameters
      ]
    # Identifier.
    - match: (?xi){{commonIdentifier}}
      scope: entity.name.function.js.fjsx15
    # Computed identifier.
    - match: \[
      scope: punctuation.definition.function.identifier.begin.js.fjsx15
      push: [ computed-identifier-end, optional-expression ]
    # String identifiers
    - match: (?=['"`])
      push:
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax
    - include: else-pop

  else-pop:
    - match: (?=\S)
      pop: true

  generic-arguments:
    - include: Packages/Naomi/syntaxes/flow1/generic/arguments.sublime-syntax

  optional-body:
    - include: body
    - include: else-pop

  optional-expression:
    - include: Packages/Naomi/syntaxes/fjsx15/optional-expression.sublime-syntax

  optional-support-body:
    - include: body
    - include: else-pop

  parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/function/parameters.sublime-syntax

  support-parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/function/parameters.sublime-syntax
